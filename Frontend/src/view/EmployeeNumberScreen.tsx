import { useState } from 'react';
import '../css/StartScreen.css';
import Header from "./Common/Header";
import { Order } from "./App";
import {getOrdersByEmployeeId} from "../utils"; // —Ç—É–¥–∞ –ø–æ–ª–æ–∂–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Order

interface Props {
    onNext: () => void;
    onBack: () => void;
    setOrders: (orders: Order[]) => void;
}


export default function EmployeeNumberScreen({ onNext, onBack, setOrders }: Props) {
    const [employeeNumber, setEmployeeNumber] = useState('');
    const [showInfo, setShowInfo] = useState(false);
    const [loading, setLoading] = useState(false);

    const handleNext = async () => {
        if (employeeNumber.trim() === '') {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä');
            return;
        }

        setLoading(true);
        try {
            // üü¢ –∑–¥–µ—Å—å –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –º–æ–∫
            const data = await getOrdersByEmployeeId(employeeNumber);
            setOrders(data);
            onNext();
        } catch (err) {
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä.');
        } finally {
            setLoading(false);
        }
    };

    return (
        <div className="screen">
            {!showInfo && (
                <div className="glass-card">
                    <Header text={'–í–≤–µ–¥–∏—Ç–µ —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä'} is_back={true} onBack={onBack} />

                    <input
                        type="text"
                        className="employee-input"
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: E12345"
                        value={employeeNumber}
                        onChange={(e) => setEmployeeNumber(e.target.value)}
                    />

                    <div className="buttons">
                        <button className="primary-btn" onClick={handleNext} disabled={loading}>
                            {loading ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "–î–∞–ª–µ–µ"}
                        </button>
                        <button className="secondary-btn" onClick={() => setShowInfo(true)}>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</button>
                    </div>
                </div>
            )}

            {showInfo && (
                <div className="glass-card info-card">
                    <button className="close-btn" onClick={() => setShowInfo(false)}>√ó</button>
                    <h2>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
                    <p>
                        –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –≤ –ø–æ–ª–µ –≤—ã—à–µ.
                        –≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏.
                        –í–∞–ª–∏–¥–Ω—ã–π —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä: E00001
                    </p>
                </div>
            )}
        </div>
    );
}
